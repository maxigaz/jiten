name: Android
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-20.04
    container:
      image: debian:buster
    strategy:
      matrix:
        target:
        - debug-armeabi-v7a
        - debug-arm64-v8a
        - release-armeabi-v7a
        - release-arm64-v8a
        package:
        - jiten
        - jiten_nodb
    steps:
    - name: Install git etc.
      run: |
        apt-get update || apt-get update
        apt-get upgrade -y
        apt-get install -y usrmerge
        apt-get install -y git lsb-release
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Setup user
      run: |
        adduser --disabled-password --gecos '' build
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Move repo to build
      run: |
        mv /__w/jiten/jiten ~build/
        ln -s ~build/jiten /__w/jiten/
        chown -R build:build ~build
    - name: Get ndk version
      run: |
        NDK="$(grep -oP 'android.ndk *= *\K.*' android/buildozer.spec)"
        echo "::set-output name=NDKVERSION::$NDK"
      id: get-ndk-version
    - name: Cache ndk
      uses: actions/cache@v2
      with:
        path: android-ndk-r${{ steps.get-ndk-version.outputs.NDKVERSION }}
        key: ${{ steps.get-ndk-version.outputs.NDKVERSION }}
    - name: Move ndk to build
      run: |
        if [ -e "$NDK" ]; then
          echo moving...
          mkdir -p ~build/.buildozer/android/platform
          mv "$NDK" ~build/.buildozer/android/platform/
          chown -R build:build ~build/.buildozer
        fi
      env:
        NDK: android-ndk-r${{ steps.get-ndk-version.outputs.NDKVERSION }}
    - name: Install dependencies
      run: |
        ./android/scripts/setup-root.sh
        su - build -c '
          set -e && cd jiten
          ./android/scripts/setup-user.sh
        '
    - name: System info
      run: |
        su - build -c '
          set -e && cd jiten
          uname -a && lsb_release -a
          git --version && python3 --version
          java -version && javac -version
          id && pwd && echo "umask=$(umask)"
        '
    - name: Build
      run: |
        su -w APP_PACKAGE_NAME - build -c '
          set -e && cd jiten
          export PATH="$HOME/.local/bin:$PATH"
          make -C android ${{ matrix.target }}
        '
      env:
        APP_PACKAGE_NAME: ${{ matrix.package }}
    - name: Move repo to root
      run: |
        rm /__w/jiten/jiten
        mv ~build/jiten /__w/jiten/
        chown -R root:root /__w/jiten/jiten
    - name: Move ndk to root
      run: |
        mv ~build/.buildozer/android/platform/"$NDK" ./
        chown -R root:root "$NDK"
      env:
        NDK: android-ndk-r${{ steps.get-ndk-version.outputs.NDKVERSION }}
    - name: SHASUMS
      run: |
        sha1sum   android/bin/*.apk
        sha256sum android/bin/*.apk
        sha512sum android/bin/*.apk
    - name: Version
      run: touch VERSION_"$(git describe --always)"
    - uses: actions/upload-artifact@v2
      with:
        name: jiten-APK
        path: |
          VERSION_*
          android/bin/*.apk
          !android/bin/*nodb*.apk
    - uses: actions/upload-artifact@v2
      with:
        name: jiten-nodb-APK
        path: |
          VERSION_*
          android/bin/*nodb*.apk
